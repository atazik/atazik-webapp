name: Deploy Angular App to Firebase Hosting

on:
  push:
    branches:
      - main      # Production
      - staging   # Staging
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}

    strategy:
      matrix:
        node-version: [20]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm ci

      - name: Determine Environment
        id: env
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "env=production" >> $GITHUB_OUTPUT
            echo "firebase_project=la-maison-atazik" >> $GITHUB_OUTPUT
            echo "angular_config=production" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF##*/}" == "staging" ]]; then
            echo "env=staging" >> $GITHUB_OUTPUT
            echo "firebase_project=la-maison-atazik-staging" >> $GITHUB_OUTPUT
            echo "angular_config=staging" >> $GITHUB_OUTPUT
          fi

      - name: Build Angular App
        run: npm run build -- --configuration ${{ steps.env.outputs.angular_config }}

      - name: Authenticate and Deploy to Firebase Hosting
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          npm install -g firebase-tools
          echo "$FIREBASE_SERVICE_ACCOUNT" > ${HOME}/firebase.json
          export GOOGLE_APPLICATION_CREDENTIALS="${HOME}/firebase.json"
          firebase deploy --only hosting:default --project ${{ steps.env.outputs.firebase_project }}
